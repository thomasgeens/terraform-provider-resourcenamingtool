# Terraform Provider testing workflow.
name: CI - Build, SAST, Docs, Unit & AcceptanceTests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      # Provider changes
      - go.mod
      - go.sum
      - main.go
      - docs/**
      - examples/**
      - internal/**
      - tools/**
      - terraform-registry-manifest.json
      # CI changes
      - .goreleaser.yaml # GoReleaser configuration changes
      # Licensing changes
      - .copywrite.hcl # Copywrite configuration changes
      - LICENSE # License changes

  push:
    branches:
      - main
    paths:
      # Provider changes
      - go.mod
      - go.sum
      - main.go
      - docs/**
      - examples/**
      - internal/**
      - tools/**
      - terraform-registry-manifest.json
      # CI changes
      - .goreleaser.yaml # GoReleaser configuration changes
      # Licensing changes
      - .copywrite.hcl # Copywrite configuration changes
      - LICENSE # License changes

# Testing only needs permissions to read the repository contents.
permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build, Unit tests and SAST
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - run: go mod download
      - name: Static code initialization
        uses: github/codeql-action/init@v3.29.0
        with:
          languages: go
          config-file: .github/codeql.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: latest
      - name: Static code analysis
        uses: github/codeql-action/analyze@v3.29.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate:
    name: Generate Docs, License, Terraform Reg Manifest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - run: make generate
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'make generate' command and commit again."; exit 1)

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform v:{{ matrix.terraform }} Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - 1.8.*
          - 1.9.*
          - 1.10.*
          - 1.11.*
          - 1.12.*
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2 # v4.2.2
      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version-file: go.mod
          cache: true
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.2
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - name: Download Go modules
        run: go mod download
      - name: Terraform {{ matrix.terraform }} acceptance tests
        env:
          TF_ACC: "1"
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10